<?php

namespace common\models;

use common\models\TblPhanlhp\TblLichhoc;
use Yii;
use yii\helpers\VarDumper;

/**
 * This is the model class for table "tbl_lophocphan".
 *
 * @property int $lophp_id
 * @property string $mahocphan
 * @property int $nhom
 * @property string $thoigianbatdau
 * @property string $thoigianketthuc

 * @property string $giangvien
 * @property string $diadiem

 * @property int $dotdk_id
 *
 * @property TblDangkyhocphan[] $tblDangkyhocphans
 * @property TblLichthi[] $tblLichthis
 * @property TblHocphan $mahocphan0
 * @property TblDotdk $dotdk

 */
class TblLophocphan extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'tbl_lophocphan';
    }

    /**
     * {@inheritdoc}
     */

    public $r;
    public $tmp;
    public function rules()
    {
        return [
            [['mahocphan', 'nhom', 'thoigianbatdau', 'thoigianketthuc','giangvien', 'diadiem'], 'required'],
            [['nhom', 'dotdk_id'], 'integer'],
            [['r','tmp'], 'string'],
            [['mahocphan'], 'string', 'max' => 20],
            [['giangvien'], 'string', 'max' => 100],
            [['diadiem'], 'string', 'max' => 300],
            
            [['mahocphan'], 'exist', 'skipOnError' => true, 'targetClass' => TblHocphan::className(), 'targetAttribute' => ['mahocphan' => 'mahocphan']],
            [['dotdk_id'], 'exist', 'skipOnError' => true, 'targetClass' => TblDotdk::className(), 'targetAttribute' => ['dotdk_id' => 'dotdk_id']],
            
            ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'lophp_id' => 'Lớp học phần',
            'mahocphan' => 'Học phần',
            'nhom' => 'Nhóm',
            'thoigianbatdau' => 'Thời gian bắt đầu',
            'thoigianketthuc' => 'Thời gian kết thúc',
             'r'=>" ",
            'giangvien' => 'Giảng viên',
            'diadiem' => 'Địa điểm',
           'tmp'=>" ",
            'dotdk_id' => 'Đợt đăng ký',
       
        ];
    }

    /**
     * Gets query for [[TblDangkyhocphans]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getTblDangkyhocphans()
    {
        return $this->hasMany(TblDangkyhocphan::className(), ['lophp_id' => 'lophp_id']);
    }

    /**
     * Gets query for [[TblLichthis]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getTblLichthis()
    {
        return $this->hasMany(TblLichthi::className(), ['lophp_id' => 'lophp_id']);
    }

    /**
     * Gets query for [[Mahocphan0]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getMahocphan0()
    {
        return $this->hasOne(TblHocphan::className(), ['mahocphan' => 'mahocphan']);
    }

    /**
     * Gets query for [[Dotdk]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getDotdk()
    {
        return $this->hasOne(TblDotdk::className(), ['dotdk_id' => 'dotdk_id']);
    }

    /**
     * Gets query for [[TblPhanlhps]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getTblPhanlhps()
    {
        return $this->hasMany(TblPhanlhp::className(), ['lophp_id' => 'lophp_id']);
    }
    public  function  beforeDelete()
    {
        $dssvtronglop=TblDangkyhocphan::findAll(["lophp_id"=>$this->lophp_id]);
//        $dslophp=TblPhanlhp::findAll(["lophp_id"=>$this->lophp_id]);
        foreach ($dssvtronglop as $sv)
        {
            $sv->delete();
        }
//        foreach ($dslophp as $plhp)
//        {
//            $plhp->delete();
//        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {
        $arr=explode("-",$this->r);
        if(count($arr)<1)
        {
            ?>
            <script>
                alert("Vui long them lich hoc");
            </script>
<?php
            return;
        }

    
        $this->thoigianbatdau= API_H17::convertDMYtoYMD($this->thoigianbatdau);
        $this->thoigianketthuc=API_H17::convertDMYtoYMD($this->thoigianketthuc);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $arr=explode("-",$this->r);

        foreach ($arr as $item)
        {
            $arr_tmp=explode("+",$item);
            if(count($arr_tmp)>0)
            {




                if(isset($arr_tmp[1]))
                {

                   $buoi= $arr_tmp[1];
                  $thu=$arr_tmp[0];
                    $tiet=$arr_tmp[2];

                    $conn= mysqli_connect("localhost", "root", "", "newcaodang") or die ("could not connect to mysql"); //thay testexcel thanh caodangvmu

                    $sql="INSERT INTO tbl_lichhoc(lophp_id,tiet,thu,buoi) VALUES ('".$this->lophp_id."','".$tiet."','".$thu."','".$buoi."')";

                    $conn->query($sql);




                }

            }
        }
     

    
        // $arr_nganh= explode(',',$this->thuocnganh);
    
        // foreach($arr_nganh as $nganh)
        // {
       
        //     $n= TblNganh::findOne(['tennganh'=>trim($nganh)]);
            
        //      $plhp= new TblPhanlhp();
           
        //      $plhp->manganh=$n->manganh;
        //      $plhp->lophp_id=$this->lophp_id;
        //      $plhp->save();
        // }
 
        return parent::afterSave($insert,$changedAttributes); // TODO: Change the autogenerated stub
    }
//    public function afterSave($insert, $changedAttributes)
//    {
//        $thuocnganhs = $this->thuocnganh;
//        foreach ($thuocnganhs as $thuocnganh)
//        {
//            $phanlophp = new TblPhanlhp();
//            $this->lophp_id = $phanlophp->lophp_id;
//
//        }
//        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
//    }
}
